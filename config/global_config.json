{
    "influxdb": {
        "token": "NMGo1rcZNSiLUNdnU2x0zMzyAq-FGu9kOm1iezAWUFxyO9LQLmBLNDcOTL_UyCqQuSz71DO37Q1ZeY4O3-3AOw==",
        "org": "Aitea_2",
        "host": "localhost",
        "port": "8086"
    },
    "bucket_not_considered": [
        "bucket_not_considered_1", 
        "bucket_not_considered_2"
    ],
    "influx_queries": {
        "general_query": "from(bucket: \"{bucket}\") |> range(start: {start}, stop: {stop})",
        "pivot": "|> pivot(rowKey: {row_key}, columnKey: {column_key}, valueColumn: \"{value}\")",
        "bucket": "from(bucket: \"{bucket}\")",
        "range": "|> range(start: {start}, stop: {stop})",
        "filter_system_id": "|> filter(fn: (r) => r.system_id == \"{system_id}\")",
        "filter_measurement": "|> filter(fn: (r) => r._measurement == \"{measurement}\")",
        "filter_not_measurement": "|> filter(fn: (r) => r._measurement != \"{measurement}\")",
        "filter_element": "|> filter(fn: (r) => r.element == \"{element}\")",
        "filter_type": "|> filter(fn: (r) => r.type == \"{type}\")",
        "filter_field": "|> filter(fn: (r) => r._field == \"{field}\")",
        "filter_not_field": "|> filter(fn: (r) => r._field != \"{field}\")",
        "tag_is": "|> filter(fn: (r) => r[\"{tag_name}\"] == \"{tag_value}\")",
        "tag_is_not": "|> filter(fn: (r) => r.{tag_name} != \"{tag_value}\")",
        "keep_columns": "|> keep(columns: {columns})",
        "schema": "import \"influxdata/influxdb/schema\" \nschema.fieldKeys(bucket: \"{schema_bucket}\", start: -100d)",
        "last_hours": "|> range(start: {start})",
        "bewteen_values_included_filter": "|> filter(fn: (r) => r._value >= {min_value} and r._value <= {max_value})",
        "bewteen_values_not_included_filter": "|> filter(fn: (r) => r._value > {min_value} and r._value < {max_value})",
        "window_aggregation": "|> aggregateWindow(every: {every}, fn: {function}, createEmpty: {create_empty}) \n|> yield(name: \"{function}\") \n|> pivot(rowKey:[\"{rowKey}\"], columnKey: [\"{columnKey}\"], valueColumn: \"{valueColumn}\")",
        "contains": "|> filter(fn: (r) => contains(value: r.{tag_name}, set: {set})", 
        "group": "|> group(columns: {columns})",
        "sort": "|> sort(columns: {columns})",
        "drop_columns": "|> drop(columns: {columns})",
        "fill": "|> fill(column: \"{columns}\", usePrevious: {previous})",
        "difference": "|> difference(nonNegative: {non_negative})"
    },
    "testing": {
        "bucket": "testing",
        "data": {
            "path": "testing_tools/testing_data.csv",
            "measurement_column": "_measurement",
            "timestamp_column": "_time",
            "start_time": "2025-06-01T00:00:00Z",
            "end_time": "2025-06-08T00:00:00Z",
            "interval_minutes": 1,
            "schema": {
                "measurement_1": {
                    "field_11": "double",
                    "field_12": "long",
                    "field_13": "string"
                },
                "measurement_2": {
                    "field_21": "double",
                    "field_22": "boolean"
                }
            },
            "tags": {
                "tag_1": [
                    "tag_11", 
                    "tag_12", 
                    "tag_13"
                ],
                "tag_2": [
                    "tag_21", 
                    "tag_22"
                ]
            }
        },
        "query": {
            "bucket": {
                "bucket": "testing"
            }, 
            "range": {
                "start": "2025-06-01T00:00:00.000Z", 
                "stop": "2025-06-04T00:00:00.000Z"
            },
            "filter_measurement": {
                "measurement": "measurement_1"
            }, 
            "filter_field": [
                {"field": "field_12"}, 
                {"field": "field_13"} 
            ]
        }
    }
}